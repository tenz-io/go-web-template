syntax = "proto3";

option go_package = "go-web-template/api/http/app;app";

package http.app;

import "google/api/annotations.proto";
import "custom/common/authz.proto";


service ApiServer {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/login"
    };
    option (custom.common.auth) = {
      role: ANONYMOUS
    };
  }
  rpc Hello(HelloRequest) returns (HelloResponse) {
    option (google.api.http) = {
      get: "/api/hello"
    };
    option (custom.common.auth) = {
      role: USER
      type: REST
    };
  }
  rpc GetImage(GetImageRequest) returns (GetImageResponse) {
    option (google.api.http) = {
      get: "/api/image/{key}"
    };
    option (custom.common.auth) = {
      role: USER
      type: REST
    };
  }
  rpc UploadImage(UploadImageRequest) returns (UploadImageResponse) {
    option (google.api.http) = {
      post: "/api/upload/image"
    };
    option (custom.common.auth) = {
      role: USER
      type: REST
    };
  }
}

message LoginRequest {
  // @inject_tag: bind:"form,name=username" validate:"required,non_blank,min_len=2,pattern=#abc123"
  string username = 1;
  // @inject_tag: bind:"form,name=password" validate:"required,non_blank,min_len=4"
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message HelloRequest {
  // @inject_tag: bind:"query,name=name" validate:"required" default:"goer"
  string name = 1;
}

message HelloResponse {
  string message = 1;
}

message GetImageRequest {
  // @inject_tag: bind:"uri,name=key" validate="required,min_len=1,max_len=64"
  string key = 1;
}

message GetImageResponse {
  bytes file = 1;
}

message UploadImageRequest {
  // @inject_tag: bind:"file,name=file" validate:"required,min_len=1"
  bytes file = 1;
  // @inject_tag: bind:"form,name=key"
  string key = 2;
}

message UploadImageResponse {
  string key = 1;
}

